{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "",
    "description": "Here the description of the project"
  },
  "host": "alsajuto.herokuapp.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/app_users": {
      "post": {
        "tags": [
          "AppUsers"
        ],
        "summary": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "get": {
        "tags": [
          "AppUsers"
        ],
        "summary": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      }
    },
    "/app_users/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "AppUsers"
        ],
        "summary": "Get user with given ID",
        "responses": {
          "200": {
            "description": "User is found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "ressource not found"
          }
        }
      },
      "delete": {
        "summary": "Delete user with given ID",
        "tags": [
          "AppUsers"
        ],
        "responses": {
          "204": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "ressource not found"
          }
        }
      },
      "patch": {
        "summary": "Partial update of the user with ID given",
        "tags": [
          "AppUsers"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "ressource not found"
          }
        }
      }
    },
    "/games": {
      "post": {
        "tags": [
          "Games"
        ],
        "summary": "Create new game in system",
        "parameters": [
          {
            "name": "game",
            "in": "body",
            "description": "Game that we want to create",
            "schema": {
              "$ref": "#/definitions/Game"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "New game is created",
            "schema": {
              "$ref": "#/definitions/Game"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Games"
        ],
        "summary": "Get all games in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Game"
              }
            }
          }
        }
      }
    },
    "/games/{gameId}": {
      "parameters": [
        {
          "name": "gameId",
          "in": "path",
          "required": true,
          "description": "ID of game that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Games"
        ],
        "summary": "Get game with given ID",
        "responses": {
          "200": {
            "description": "Game is found",
            "schema": {
              "$ref": "#/definitions/Game"
            }
          },
          "404": {
            "description": "ressource not found"
          }
        }
      },
      "delete": {
        "summary": "Delete game with given ID",
        "tags": [
          "Games"
        ],
        "responses": {
          "204": {
            "description": "game is deleted",
            "schema": {
              "$ref": "#/definitions/Game"
            }
          },
          "404": {
            "description": "ressource not found"
          }
        }
      },
      "patch": {
        "summary": "Partial update of the game with give ID",
        "tags": [
          "Games"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Game with new values of properties",
            "schema": {
              "$ref": "#/definitions/Game"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Game is updated",
            "schema": {
              "$ref": "#/definitions/Game"
            }
          },
          "404": {
            "description": "ressource not found"
          }
        }
      }
    },
    "/matchings": {
      "get": {
        "tags": [
          "Matchings"
        ],
        "summary": "Get all matchings for the user requester",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Matching"
              }
            }
          }
        }
      }
    },
    "/matchings/refresh": {
      "get": {
        "tags": [
          "Matchings"
        ],
        "summary": "Get all matchings for the user requester + looking for new match",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Matching"
              }
            }
          }
        }
      }
    },
    "/matchings/{matchingId}": {
      "parameters": [
        {
          "name": "matchingId",
          "in": "path",
          "required": true,
          "description": "ID of matching that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Matchings"
        ],
        "summary": "Get matching with given ID",
        "responses": {
          "200": {
            "description": "matchings is found",
            "schema": {
              "$ref": "#/definitions/Matching"
            }
          },
          "404": {
            "description": "ressource not found"
          }
        }
      },
      "delete": {
        "summary": "Delete matching with given ID",
        "tags": [
          "Matchings"
        ],
        "responses": {
          "204": {
            "description": "game is deleted",
            "schema": {
              "$ref": "#/definitions/Game"
            }
          },
          "404": {
            "description": "ressource not found"
          }
        }
      },
      "patch": {
        "summary": "Partial update of the matchings with give ID",
        "tags": [
          "Matchings"
        ],
        "parameters": [
          {
            "name": "matching",
            "in": "body",
            "description": "matching with new values of properties",
            "schema": {
              "$ref": "#/definitions/Matching"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Matching is updated",
            "schema": {
              "$ref": "#/definitions/Matching"
            }
          },
          "404": {
            "description": "ressource not found"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Return a token valid for 24hours",
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "description": "credentials of the user to login",
            "schema": {
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "/reset_password": {
      "get": {
        "tags": [
          "AppUsers"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "descrition": "the email of the user who need to set a new password",
            "schema": {
              "email": {
                "type": "string"
              }
            }
          }
        ],
        "summary": "use to normaly sent a mail to reset the password of the user",
        "responses": {
          "200": {
            "description": "successfully find the user and sent the mail",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                },
                "url": {
                  "type": "string",
                  "description": "url is temporary. When we set a mailing system it won't be in the response anymore"
                }
              }
            }
          },
          "404": {
            "description": "User not found with this email",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update the password of the user",
        "tags": [
          "AppUsers"
        ],
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "desciption": "the new value for the password",
            "schema": {
              "properties": {
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully update the user",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": [
        "email"
      ],
      "properties": {
        "id": {
          "type": "string",
          "uniqueItems": true,
          "readOnly": true
        },
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string",
          "format": "password",
          "writeOnly": true
        },
        "lastName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "sexualityPref": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "ageTargeted": {
          "type": "string"
        },
        "heightInCentimeter": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "positionRange": {
          "type": "number"
        },
        "geoLocPosition": {
          "type": "string"
        }
      }
    },
    "Matching": {
      "properties": {
        "userOne": {
          "$ref": "#/definitions/User"
        },
        "userTwo": {
          "$ref": "#/definitions/User"
        },
        "responseUserOne": {
          "type": "boolean"
        },
        "responseUserTwo": {
          "type": "boolean"
        }
      }
    },
    "Game": {
      "properties": {
        "id": {
          "type": "number",
          "uniqueItems": true,
          "readOnly": true
        },
        "creatorId": {
          "type": "string"
        },
        "challengedId": {
          "type": "string"
        },
        "gameType": {
          "type": "number"
        },
        "scoreCreator": {
          "type": "string"
        },
        "scoreChallenged": {
          "type": "string"
        }
      }
    },
    "TypePreference": {
      "properties": {
        "id": {
          "type": "string",
          "uniqueItems": true,
          "readOnly": true
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Preference": {
      "properties": {
        "id": {
          "type": "string",
          "uniqueItems": true,
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/TypePreference"
        },
        "style": {
          "type": "string"
        }
      }
    },
    "TypeGame": {
      "properties": {
        "id": {
          "type": "number",
          "uniqueItems": true,
          "readOnly": true
        },
        "type": {
          "type": "string"
        },
        "template": {
          "type": "integer"
        }
      }
    }
  }
}